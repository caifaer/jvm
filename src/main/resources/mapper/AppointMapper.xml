<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smj.testboot.mapper.AppointMapper" >


    <resultMap id="resultMap" type="com.smj.testboot.bean.ReportVo">
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="sch_result_id" property="schResultId" jdbcType="VARCHAR"/>
        <result column="corp_code" property="corpCode" jdbcType="VARCHAR"/>
        <result column="dept_code" property="deptCode" jdbcType="VARCHAR"/>
        <result column="dept_name" property="deptName" jdbcType="VARCHAR"/>
        <result column="doct_code" property="doctCode" jdbcType="VARCHAR"/>
        <result column="doct_name" property="doctName" jdbcType="VARCHAR"/>
        <result column="app_num" property="appNum" jdbcType="INTEGER"/>
        <result column="reg_num" property="regNum" jdbcType="INTEGER"/>
        <result column="exp_num" property="expNum" jdbcType="INTEGER"/>
        <result column="finish_num" property="finishNum" jdbcType="INTEGER"/>
        <result column="cancel_num" property="cancelNum" jdbcType="INTEGER"/>
        <result column="back_num" property="backNum" jdbcType="INTEGER"/>
        <result column="total_num" property="totalNum" jdbcType="INTEGER"/>
        <result column="channel_type" property="channelType" jdbcType="INTEGER"/>
        <result column="sch_date" property="schDate" jdbcType="DATE"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="allFields">
        corp_code, sch_result_id, dept_code, dept_name, doct_code, doct_name, channel_type, app_num, reg_num, exp_num, finish_num, cancel_num, back_num,
        total_num, sch_date, create_time, update_time
    </sql>



    <update id="updateAppointChannelInfo">
        update statis_sch_appoint_channel
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="update_time =now(),sch_result_id =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} and channel_type = #{item.channelType} then #{item.schResultId}
                </foreach>
            </trim>
            <trim prefix="corp_code =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} and channel_type = #{item.channelType} then #{item.corpCode}
                </foreach>
            </trim>
            <trim prefix="dept_code =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} and channel_type = #{item.channelType} then #{item.deptCode}
                </foreach>
            </trim>
            <trim prefix="dept_name =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} and channel_type = #{item.channelType} then #{item.deptName}
                </foreach>
            </trim>

            <trim prefix="doct_code =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} and channel_type = #{item.channelType} then #{item.doctCode}
                </foreach>
            </trim>

            <trim prefix="doct_name =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} and channel_type = #{item.channelType} then #{item.doctName}
                </foreach>
            </trim>

            <trim prefix="channel_type =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} and channel_type = #{item.channelType} then #{item.channelType}
                </foreach>
            </trim>

            <trim prefix="app_num =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} and channel_type = #{item.channelType} then #{item.appNum}
                </foreach>
            </trim>

            <trim prefix="reg_num =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} and channel_type = #{item.channelType} then #{item.regNum}
                </foreach>
            </trim>

            <trim prefix="exp_num =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} and channel_type = #{item.channelType} then #{item.expNum}
                </foreach>
            </trim>

            <trim prefix="back_num =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} and channel_type = #{item.channelType} then #{item.backNum}
                </foreach>
            </trim>

            <trim prefix="cancel_num =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} and channel_type = #{item.channelType} then #{item.cancelNum}
                </foreach>
            </trim>

            <trim prefix="total_num =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} and channel_type = #{item.channelType} then #{item.totalNum}
                </foreach>
            </trim>

            <trim prefix="sch_date =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} and channel_type = #{item.channelType} then #{item.schDate}
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="list" index="index" item="item" separator="or">
            (sch_result_id = #{item.schResultId} and channel_type = #{item.channelType})
        </foreach>
    </update>


    <update id="updateAppointInfo">
        update statis_sch_appoint
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="update_time =now(),sch_result_id =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} then #{item.schResultId}
                </foreach>
            </trim>
            <trim prefix="corp_code =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} then #{item.corpCode}
                </foreach>
            </trim>
            <trim prefix="dept_code =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} then #{item.deptCode}
                </foreach>
            </trim>
            <trim prefix="dept_name =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} then #{item.deptName}
                </foreach>
            </trim>

            <trim prefix="doct_code =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} then #{item.doctCode}
                </foreach>
            </trim>

            <trim prefix="doct_name =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} then #{item.doctName}
                </foreach>
            </trim>

            <trim prefix="app_num =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} then #{item.appNum}
                </foreach>
            </trim>

            <trim prefix="reg_num =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} then #{item.regNum}
                </foreach>
            </trim>

            <trim prefix="exp_num =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} then #{item.expNum}
                </foreach>
            </trim>

            <trim prefix="finish_num =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} then #{item.finishNum}
                </foreach>
            </trim>

            <trim prefix="back_num =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} then #{item.backNum}
                </foreach>
            </trim>

            <trim prefix="cancel_num =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} then #{item.cancelNum}
                </foreach>
            </trim>

            <trim prefix="total_num =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} then #{item.totalNum}
                </foreach>
            </trim>

            <trim prefix="sch_date =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when sch_result_id=#{item.schResultId} then #{item.schDate}
                </foreach>
            </trim>
        </trim>
        where
        sch_result_id in
        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item.schResultId}
        </foreach>
    </update>


    <update id="updateReport">
        <foreach collection="list" item="item" separator=";" index="index">
            update statis_sch_appoint_copy1
            <set>
                <if test="item.schResultId != null">
                    sch_result_id = #{item.schResultId},
                </if>
                <if test="item.corpCode != null">
                    corp_code = #{item.corpCode},
                </if>
                <if test="item.deptCode != null">
                    dept_code = #{item.deptCode},
                </if>
                <if test="item.deptName != null">
                    dept_name = #{item.deptName},
                </if>
                <if test="item.doctCode != null">
                    doct_code = #{item.doctCode},
                </if>
                <if test="item.doctName != null">
                    doct_name = #{item.doctName},
                </if>
                <if test="item.appNum != null">
                    app_num = #{item.appNum},
                </if>
                <if test="item.regNum != null">
                    reg_num = #{item.regNum},
                </if>
                <if test="item.expNum != null">
                    exp_num = #{item.expNum},
                </if>
                <if test="item.backNum != null">
                    back_num = #{item.backNum},
                </if>
                <if test="item.cancelNum != null">
                    cancel_num = #{item.cancelNum},
                </if>
                <if test="item.totalNum != null">
                    total_num = #{item.totalNum},
                </if>
                <if test="item.schDate != null">
                    sch_date = #{item.schDate},
                </if>
                update_time = now()
            </set>
            where sch_result_id = #{item.schResultId}
        </foreach>
    </update>



    <select id="selectAppointChannelInfoByDate" resultMap="resultMap">
        select   <include refid="allFields"/>,  CONCAT(sch_result_id,"_",channel_type) uniqueKey
        from statis_sch_appoint_channel_copy1
        where sch_date between #{startDate} and #{endDate}
    </select>

    <select id="selectAppointInfoByDate" resultMap="resultMap">
        select   corp_code, sch_result_id, dept_code, dept_name, doct_code, doct_name, app_num, reg_num, exp_num, finish_num, cancel_num, back_num,
        total_num, sch_date, create_time, update_time
        from statis_sch_appoint limit 500
    </select>
    <select id="select" resultMap="resultMap">
        select   <include refid="allFields"/>
        from statis_sch_appoint_channel
        where sch_date between #{startDate, jdbcType=DATE} and #{endDate, jdbcType=DATE}
    </select>
    <select id="selectAppointChannelCount" resultType="java.lang.Long">
        select count(*)
        from (select a.sch_result_id,a.corp_code,a.dept_code,a.dept_name,a.doct_code,a.doct_name,
        sum(a.app_num) as app_num,sum(a.reg_num) as reg_num,sum(a.exp_num) as exp_num,
        sum(a.finish_num) as finish_num,sum(a.cancel_num) as cancel_num, sum(a.back_num) as back_num,
        sch_date,
        b.num as totalNum
        from
        statis_sch_appoint_channel_copy1 a
        left join
        (
        select sch_result_id,sum(limit_num) as num
        from schedule_result_interval
        where sch_result_id in
        <foreach collection="appoint.resultIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        group by sch_result_id
        ) b
        on a.sch_result_id = b.sch_result_id
        where sch_date between #{appoint.startDate} and #{appoint.endDate}
        group by sch_result_id)a
    </select>


    <select id="selectAppoint" resultMap="resultMap">

        select a.sch_result_id,a.corp_code,a.dept_code,a.dept_name,a.doct_code,a.doct_name,
        sum(a.app_num) as app_num,sum(a.reg_num) as reg_num,sum(a.exp_num) as exp_num,
        sum(a.finish_num) as finish_num,sum(a.cancel_num) as cancel_num, sum(a.back_num) as back_num,
        sch_date,
        b.num as totalNum
        from
        statis_sch_appoint_channel_copy1 a
        left join
        (
        select sch_result_id,sum(limit_num) as num
        from schedule_result_interval
        where sch_result_id in
        <foreach collection="appoint.resultIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        group by sch_result_id
        ) b
        on a.sch_result_id = b.sch_result_id
        where sch_date between #{appoint.startDate} and #{appoint.endDate}
        group by sch_result_id
        order by sch_result_id
        <if test="appoint.enabled != null and appoint.enabled == true">
            limit #{appoint.startRow},#{appoint.pageSize}
        </if>
    </select>

    <insert id="insertReport">
        insert into statis_sch_appoint_copy1
        (corp_code,sch_result_id,dept_code,dept_name,doct_code,doct_name,app_num,reg_num,exp_num,finish_num,cancel_num,back_num,
        total_num,sch_date,create_time,update_time)
        values
        <foreach collection="list" item="item" separator=",">
            ( #{item.corpCode},#{item.schResultId},#{item.deptCode},#{item.deptName},#{item.doctCode},#{item.doctName},
            #{item.appNum},#{item.regNum},#{item.expNum},#{item.finishNum},#{item.cancelNum},#{item.backNum},#{item.totalNum},#{item.schDate},
            now(),now() )
        </foreach>
    </insert>



    <select id="selectOrderCountByLargeRecordPage" resultType="java.lang.Long">
        select count(*) from (select sch_result_id,corp_code,dept_code,dept_name,doct_code,doct_name,channel_type,
    MAX(CASE WHEN a.reg_mode=1 AND a.status = 2 THEN a.num ELSE 0 END) AS app_num,
    MAX(CASE WHEN a.reg_mode=2 AND a.status = 2 THEN a.num ELSE 0 END) AS reg_num,
    MAX(CASE WHEN a.reg_mode=1 AND a.status = 1 THEN a.num ELSE 0 END) AS exp_num,
    SUM(CASE WHEN a.status = 2 THEN a.num ELSE 0 END) AS finish_num,
    SUM(CASE WHEN a.status = 6 THEN a.num ELSE 0 END) AS back_num,
    SUM(CASE WHEN a.status = 3 THEN a.num ELSE 0 END) AS cancel_num,
    sch_date
    from
    (
    select sch_result_id,corp_code,reg_mode,dept_code,dept_name,doct_code,doct_name,status,channel_type,count(*) as num,sch_date
    from sch_order
    where sch_date between #{startDate} and #{endDate}
    group by sch_result_id,reg_mode,channel_type,status)a
    group by sch_result_id,channel_type)m
    </select>
    <select id="selectOrderNumByPageQuery" resultType="com.smj.testboot.bean.ReportVo">
        select sch_result_id as schResultId,corp_code as corpCode,dept_code as deptCode,dept_name as deptName,doct_code as doctCode,doct_name as doctName,channel_type as channelType,CONCAT(sch_result_id,"_",channel_type) uniqueKey,
        MAX(CASE WHEN a.reg_mode=1 AND a.status = 2 THEN a.num ELSE 0 END) AS app_num,
        MAX(CASE WHEN a.reg_mode=2 AND a.status = 2 THEN a.num ELSE 0 END) AS reg_num,
        MAX(CASE WHEN a.reg_mode=1 AND a.status = 1 THEN a.num ELSE 0 END) AS exp_num,
        SUM(CASE WHEN a.status = 2 THEN a.num ELSE 0 END) AS finish_num,
        SUM(CASE WHEN a.status = 6 THEN a.num ELSE 0 END) AS back_num,
        SUM(CASE WHEN a.status = 3 THEN a.num ELSE 0 END) AS cancel_num,
        sch_date as schDate
        from
        (
        select sch_result_id,corp_code,reg_mode,dept_code,dept_name,doct_code,doct_name,status,channel_type,count(*) as num,sch_date
        from sch_order
        where sch_date between #{startDate} and #{endDate}
        group by sch_result_id,reg_mode,channel_type,status
        order by sch_result_id
        )a
        group by sch_result_id,channel_type
        order by sch_result_id
        <if test="enabled != null and enabled == true">
            limit #{startRow},#{pageSize}
        </if>
    </select>

    <select id="selectDaysCountByLargeRecordPage" resultType="java.lang.Long">
        select count(*) from
        (select
        <include refid="allFields"/>
        from statis_sch_appoint_channel_copy1
        where sch_date between #{startDate} and #{endDate})a
    </select>
    <select id="selectDaysByPageQuery" resultMap="resultMap">
        select
        <include refid="allFields"/>, CONCAT(sch_result_id,"_",channel_type) uniqueKey
        from statis_sch_appoint_channel_copy1
        where sch_date between #{startDate} and #{endDate}
        order by sch_result_id
        <if test="enabled != null and enabled == true">
            limit #{startRow},#{pageSize}
        </if>
    </select>

    <insert id="insertReportChannel">
        insert into statis_sch_appoint_channel_copy1
        (<include refid="allFields"/>)
        values
        <foreach collection="list" item="item" separator=",">
            ( #{item.corpCode},#{item.schResultId},#{item.deptCode},#{item.deptName},#{item.doctCode},#{item.doctName},#{item.channelType},
            #{item.appNum},#{item.regNum},#{item.expNum},#{item.finishNum},#{item.cancelNum},#{item.backNum},#{item.totalNum},#{item.schDate},
            now(),now() )
        </foreach>
    </insert>

    <update id="updateReportChannel">

        <foreach collection="list" item="item" separator=";">
            update statis_sch_appoint_channel_copy1
            <set>
                <if test="item.schResultId != null">
                    sch_result_id = #{item.schResultId},
                </if>
                <if test="item.corpCode != null">
                    corp_code = #{item.corpCode},
                </if>
                <if test="item.deptCode != null">
                    dept_code = #{item.deptCode},
                </if>
                <if test="item.deptName != null">
                    dept_name = #{item.deptName},
                </if>
                <if test="item.doctCode != null">
                    doct_code = #{item.doctCode},
                </if>
                <if test="item.doctName != null">
                    doct_name = #{item.doctName},
                </if>
                <if test="item.channelType != null">
                    channel_type = #{item.channelType},
                </if>
                <if test="item.appNum != null">
                    app_num = #{item.appNum},
                </if>
                <if test="item.regNum != null">
                    reg_num = #{item.regNum},
                </if>
                <if test="item.expNum != null">
                    exp_num = #{item.expNum},
                </if>
                <if test="item.backNum != null">
                    back_num = #{item.backNum},
                </if>
                <if test="item.cancelNum != null">
                    cancel_num = #{item.cancelNum},
                </if>
                <if test="item.totalNum != null">
                    total_num = #{item.totalNum},
                </if>
                <if test="item.schDate != null">
                    sch_date = #{item.schDate},
                </if>
                update_time = now()
                where sch_result_id = #{item.schResultId} and channel_type = #{item.channelType}
            </set>
        </foreach>
    </update>

    <select id="selectPlanDualCorp" resultType="java.lang.String">
        select
        corp_code
        from sys_corp
        where plan_style in (1,4,5)
        and status = 1
    </select>

    <select id="selectCountByLargeRecordPage" resultType="java.lang.Integer">
      select count(*) from(
        select sch_result_id, corp_code,dept_code,dept_name,doct_code,
        doct_name,sch_date,channel as channel_type, sum(a.totalNum) as totalNum
        from
        (select sch_result_id,corp_code,dept_code,dept_name,doct_code,
        doct_name,sch_date,channel,interval_flag,IF(end_num = 0, 0, end_num - start_num + 1) as totalNum
        from
        (
        select c.sch_result_id,r.corp_code,r.dept_code,r.dept_name,r.doct_code,
        r.doct_name,r.sch_date,c.channel,c.interval_flag,c.start_num,c.end_num
        from sch_result_channel c, sch_result r
        where c.sch_result_id = r.id and r.sch_date between #{startDate} and #{endDate}
        ) rc
        group by sch_result_id,channel,interval_flag
        ) a
        group by sch_result_id,channel_type)m
    </select>
    <select id="selectChannelNumByPageQuery" resultType="com.smj.testboot.bean.ReportVo">
        select sch_result_id as schResultId,corp_code as corpCode,dept_code as deptCode,dept_name as deptName,doct_code as doctCode,doct_name as doctName,sch_date as schDate, channel as channelType, sum(a.totalNum) as totalNum, CONCAT(sch_result_id,"_",channel) uniqueKey
        from
        (select sch_result_id,corp_code,dept_code,dept_name,doct_code,
        doct_name,sch_date,channel,interval_flag,IF(end_num = 0, 0, end_num - start_num + 1) as totalNum
        from
        (
        select c.sch_result_id,r.corp_code,r.dept_code,r.dept_name,r.doct_code,
        r.doct_name,r.sch_date,c.channel,c.interval_flag,c.start_num,c.end_num
        from sch_result_channel c, sch_result r
        where c.sch_result_id = r.id and r.sch_date between #{startDate} and #{endDate}
        ) rc
        group by sch_result_id,channel,interval_flag
        ) a
        group by sch_result_id,channelType
        order by sch_result_id
        <if test="enabled != null and enabled == true">
            limit #{startRow},#{pageSize}
        </if>

    </select>
    <select id="selectOneDay" resultMap="resultMap">
            select
            <include refid="allFields"/>, CONCAT(sch_result_id,"_",channel_type) uniqueKey
            from statis_sch_appoint_channel_copy1
            where sch_date between #{startDate} and #{endDate}
    </select>
</mapper>